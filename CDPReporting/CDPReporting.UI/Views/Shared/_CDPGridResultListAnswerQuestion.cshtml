@model CDPReporting.Business.Models.QuestionResponseModel

@if (Model != null)
{ }

<script src="~/Scripts/Questionnaire/CreateTabularQuestion.js"></script>

<div class="form-horizontal" questionid=@Model.QuestionId questiontype="@Model.QuestionType" id="TabularDiv">
    <h4>@string.Format("{0}: {1}", Model.CDPId, Model.Caption)</h4><p>@Model.QuestionText</p>
    <div id="tabularQuestion">

    </div>

    @if (Model.QuestionType == CDPReporting.Business.Models.QuestionType.CDPGridResultList)
    {
        <div class="col-md-12">
            <div class="text-right" style="margin-bottom:15px; clear:both">
                <button id="AddRow" type="button" class="btn btn-primary">Add Row</button>
            </div>
        </div>

        <div id="newTable" style="clear:both">

        </div>
    }

    <div class="col-md-12">
        <div style="margin:10px 0; clear:both" class="text-right">
            <button id="tabularSave" type="button" class="btn btn-primary">Save</button>
        </div>
    </div>
</div>


@*</div>*@



<script>
    var tabledata;
    var FinalAnswer = new Array();

    var AddedRowIndex = new Array();
    var NumberOFRowsAfter = 0;;
    var NumberOfRowsBefore = 0;
    var RowsCountForOldData = 0;
    var answerToDisplay = new Array();
    var questionType = '@Model.QuestionType';
    //debugger;

    /************************************* Set value from drop down*************************/
    $(document).on('click', ".dropdown-menu li a", function () {
        //debugger;
        selText = $(this).text();
        $(this).parents('.btn-group').find('.dropdown-toggle').html(selText + ' <span class="caret"></span>');



    });
    /****************************************End***************************/


    /************************************* Save final values *************************/

    $('#tabularSave').off();
    $('#tabularSave').on('click', function (e) {
        //debugger;
        e.stopPropagation();
        var questionResponse = new Array();
        var dataTosend = new Object();


        if (questionType != 'CDPGridResultList') {
            var arrAnswers = GetParentTableData();
            var answerRowData = new Object();
            if (arrAnswers.length > 0) {

                answerRowData.Answer = arrAnswers[1];
                answerRowData.year = '@Model.Year';
                answerRowData.Id = '@Model.AnswerId';
                answerRowData.QuestionId = '@Model.QuestionId';
            }
            questionResponse.push(answerRowData);
            dataTosend = questionResponse;

        }
        else {

            removeDuplicateRows($('table'));
            questionResponse = GetQuestionListOfAnswers();
            dataTosend = questionResponse;


        }

        $.post('@Url.Content("~/Questionnaire/SaveResponseTableType/")',
           { model: dataTosend, questionId: '@Model.QuestionId', 'selectedYear': '@Model.Year' },
         function (data, status) {
             if (status == "success") {
                 $("#Successdiv").css('visibility', 'visible');
             }
             else {
                 $("#ErrorDiv").css('visibility', 'visible');
             }

             //debugger;

         }

       );

    });


    /*get final data */

    function GetQuestionListOfAnswers() {
        var QuestionResponse = new Array();
        var newtabledata = document.getElementById("newtabularQuestionTable");
        if ($('#newtabularQuestionTable').length > 0) {
            if (newtabledata.rows.length > 0) {
                for (i = 0; i < newtabledata.rows.length; i++) {
                    var answer = "";
                    var dataTosend = new Object();
                    for (j = 0; j < newtabledata.rows[0].cells.length - 1; j++) {

                        answer += newtabledata.rows[i].cells[j].innerText + "||"
                    }

                    dataTosend.Answer = answer;
                    dataTosend.Id = newtabledata.rows[i].id;
                    dataTosend.year = '@Model.Year';
                    dataTosend.QuestionId = '@Model.QuestionId';
                    QuestionResponse.push(dataTosend);

                }
            }
        }
        return QuestionResponse;
    }

    /*End*/
    /****************************************End***************************/
    $('#AddRow').off();
    $(document).on('click', "#AddRow", function () {
        //debugger;
        GetParentTableData();

        var arr = $("#newtabularQuestionTable tr");


        CreateChildTable();
        removeDuplicateRows($('table'));

    });

    $(document).on('click', ' #newtabularQuestionTable input[type="button"]', function () {

        //debugger;
        $(this).closest('tr').remove();

        var newtabledata = document.getElementById("newtabularQuestionTable");

        @*if (newtabledata.rows.length < 1) {
            var QuestionResponse = new Object();
            $.post('@Url.Content("~/Questionnaire/SaveResponseTableType/")',
                        { model: QuestionResponse, questionId: '@Model.QuestionId', 'selectedYear': '@Model.Year' },
                      function (data) {
                          //debugger;

                      }

                    );
        }*@
    });




    /************************************* Get data fro mparent table *************************/

    function GetParentTableData() {


        headerdata = new Array();
        textdata = new Array();
        resultDropDownData = new Array();
        var multipleList;
        var multipleValue;
        var errorMessage = "";        
        answerToDisplay = new Array();

        tabledata = document.getElementById("tabularQuestionTable");
        for (m = 0; m < 1; m++) {
            for (j = 0; j < tabledata.rows[m].cells.length; j++) {

                headerdata[j] = tabledata.rows[m].cells[j].innerText;
            }
        }

        try {
            for (i = 1; i < tabledata.rows.length - RowsCountForOldData; i++) {

                FinalAnswer[i] = "";
                for (j = 0; j < tabledata.rows[i].cells.length; j++) {


                    if (tabledata.rows[i].cells[j].children[0].tagName == 'TEXTAREA') {
                        for (k = 0; k < tabledata.rows[i].cells[j].children.length; k++) {

                            textdata[k] = tabledata.rows[i].cells[j].children[k].value;
                            if (textdata[k] == "") {

                                errorMessage = "Invalid data!!";
                            }
                            else {
                                FinalAnswer[i] += textdata[k] + "||";
                                answerToDisplay[j] = textdata[k];
                                tabledata.rows[i].cells[j] = tabledata.rows[i].cells[j].innerHTML;



                            }

                        }
                    }

                    if (tabledata.rows[i].cells[j].children[0].name == 'DateEnter') {
                        for (k = 0; k < tabledata.rows[i].cells[j].children.length; k++) {
                            //debugger;
                            textdata[k] = tabledata.rows[i].cells[j].children[k].value;
                            if (textdata[k] == "") {

                                errorMessage = "Invalid data!!";

                            }
                            else {
                                FinalAnswer[i] += textdata[k] + "||";
                                answerToDisplay[j] = textdata[k];
                                tabledata.rows[i].cells[j] = tabledata.rows[i].cells[j].innerHTML;

                            }

                        }
                    }
                    if (tabledata.rows[i].cells[j].children[0].name == 'NumberEnter') {
                        for (k = 0; k < tabledata.rows[i].cells[j].children.length; k++) {
                            ////debugger;
                            textdata[k] = tabledata.rows[i].cells[j].children[k].value;
                            if (textdata[k] == "") {

                                errorMessage = "Invalid data!!";

                            }
                            else {
                                FinalAnswer[i] += textdata[k] + "||";
                                answerToDisplay[j] = textdata[k];
                                tabledata.rows[i].cells[j] = tabledata.rows[i].cells[j].innerHTML;
                            }

                        }
                    }

                    else if (tabledata.rows[i].cells[j].getElementsByClassName("multiselect").length > 0) {
                        ////debugger;
                        multipleList = tabledata.rows[i].cells[j].getElementsByTagName("BUTTON")[0].attributes[3];
                        multipleValue = multipleList.textContent;
                        if (multipleValue == "" || multipleValue == "None selected") {
                            errorMessage = "Invalid data!!";

                        }
                        else {
                            FinalAnswer[i] += multipleValue + "||";
                            answerToDisplay[j] = multipleValue;
                            tabledata.rows[i].cells[j] = tabledata.rows[i].cells[j].innerHTML;

                        }

                    }
                    else {
                        // //debugger;
                        resultDropDownData[j] = tabledata.rows[i].cells[j].innerText;
                        if (resultDropDownData[j] == "" || resultDropDownData[j] == "Select From") {
                            errorMessage = "Invalid data!!";

                        }
                        else {
                            FinalAnswer[i] += resultDropDownData[j] + "||";
                            answerToDisplay[j] = resultDropDownData[j];
                            tabledata.rows[i].cells[j] = tabledata.rows[i].cells[j].innerHTML;

                        }

                    }
                }
            }
            //if (errorMessage.includes("Invalid data!!"))
            //{
            //    errorMessage = "";
            //    throw new Error("Invalid data!!");
            //}
            //else
            //{

            //}
            return FinalAnswer;

        }

        catch (err) {


            alert(err.message);


        }

    }

    /****************************************End***************************/


    /*********create table or add data to existing table  *************************/
    function CreateChildTable() {
        var newtabledata = document.getElementById("newtabularQuestionTable");
        debugger;
        if (answerToDisplay.includes(undefined) == false && answerToDisplay.includes('') == false && answerToDisplay.length == document.getElementById("tabularQuestionTable").rows[0].cells.length) {
            if (answerToDisplay.length > 0) {
                if ($('#newtabularQuestionTable').length === 0) {
                    var html = "<div class=\"table-responsive\" style=\"height: 195px; overflow-y: scroll;\">" + "<table id=\"newtabularQuestionTable\" class=\"table table-bordered\">"
                    html += "<tbody>"
                    html += "<tr id=" + ' ' + ">"
                    for (n = 0; n < answerToDisplay.length; n++) {
                        //debugger;

                        html += ("<td>" + answerToDisplay[n] + "</td>");

                    }
                    html += "<td><input type=\"button\" value=\"Delete\" id=deletebutton>" + "</td>";
                    html += "</tr>";
                    html += "</tbody> </table> </div>"
                    //debugger;
                    document.getElementById('newTable').innerHTML = html;
                }


                else {
                    var newtabledata = document.getElementById("newtabularQuestionTable");
                    var row = newtabledata.insertRow(newtabledata.rows.length);
                    row.id = "";
                    //debugger;
                    for (n = 0; n < answerToDisplay.length; n++) {
                        //debugger;
                        var cell = row.insertCell(n);
                        cell.innerHTML = answerToDisplay[n];


                    }
                    //debugger;
                    if (newtabledata.rows.length === 1) {
                        count = newtabledata.rows[0].cells.length;
                        count += 1;
                    }
                    else {
                        count = newtabledata.rows[0].cells.length;
                    }

                    var cell = row.insertCell(count - 1);
                    cell.innerHTML = "<input type=\"button\" value=\"Delete\" id=deletebutton>";


                }
            }
        }
    }

    /*********End***************************/

    /*********create table after returning view from controller add data to existing table  *************************/

    $(document).ready(function () {
        //debugger;
        var newArray = new Array();

        if ('@Model.Value' != '') {

            //debugger;
            var javascriptArray = '@Html.Raw(Json.Encode(Model.Value))';

            var returnArray = JSON.parse(javascriptArray);
            for (i = 0; i < returnArray.length; i++) {
                var arr = new Object();
                //debugger;
                arr.Id = returnArray[i].Id;
                arr.Answer = returnArray[i].Answer.split('||');

                newArray.push(arr);
            }


            if ('@Model.QuestionType' == 'CDPGrid') {
                // SetInitialValuesForColumn();
            }
            else {

                var newtabledata = document.getElementById("newtabularQuestionTable");


                // var arr = TableValues.split('||');
                if ($('#newtabularQuestionTable').length === 0) {
                    var html = "<div class=\"table-responsive\" style=\"height: 195px; overflow-y: scroll;\">" + "<table id=\"newtabularQuestionTable\" class=\"table table-bordered\">"
                    html += "<tbody>"

                    for (i = 0; i < newArray.length ; i++) {
                        html += "<tr id=" + (newArray[i].Id) + ">"
                        for (n = 0; n < newArray[i].Answer.length - 1; n++) {
                            //debugger;

                            html += ("<td>" + newArray[i].Answer[n] + "</td>");


                        }
                        html += "<td><input type=\"button\" value=\"Delete\" id=deletebutton>" + "</td>";
                    }

                    html += "</tr>";
                    html += "</tbody> </table> </div>"
                    //debugger;
                    document.getElementById('newTable').innerHTML = html;
                    // document.getElementById('newTable').HTML(html) ;
                }



            }


        }


    });

    /****************************************End***************************/



    function removeDuplicateRows($table) {
        function getVisibleRowText($row) {
            return $row.find('td:visible').text().toLowerCase();
        }

        $table.find('tr').each(function (index, row) {
            var $row = $(row);
            $row.nextAll('tr').each(function (index, next) {
                var $next = $(next);
                if (getVisibleRowText($next) == getVisibleRowText($row))
                    $next.remove();
            })
        });
    }


    function SetInitialValuesForColumn() {
        tabledata = document.getElementById("tabularQuestionTable");
        var newArray = new Array();
        var answerfromdb = new Array();
        var javascriptArray = '@Html.Raw(Json.Encode(Model.Value))';

        var returnArray = JSON.parse(javascriptArray);
        for (i = 0; i < returnArray.length; i++) {
            var arr = new Object();
            //debugger;
            arr.Id = returnArray[i].Id;
            arr.Answer = returnArray[i].Answer.split('||');

            newArray.push(arr);

        }

        for (n = 0; n < newArray[0].Answer.length; n++) {
            answerfromdb.push(newArray[0].Answer[n]);

        }

        var dropdownCount = $('#SimpleDropDownDiv  button').length;
        var textareaCount = $('textarea#comment').length;
        var numericFieldCount = $('input#numField').length;
        var dateFieldCount = $('input#dateField').length;
        var numericCount = 0;
        var textcount = 0;
        var Ddowncount = 0;
        var dateCount = 0;
        for (i = 1; i < tabledata.rows.length - RowsCountForOldData; i++) {

            for (j = 0; j < tabledata.rows[i].cells.length; j++) {


                if (tabledata.rows[i].cells[j].children[0].tagName == 'TEXTAREA') {
                    if (textcount < textareaCount) {


                        $('textarea#comment')[textcount].value = answerfromdb[j];
                        textcount++;
                    }
                }

                if (tabledata.rows[i].cells[j].children[0].name == 'DateEnter') {
                    if (dateCount < dateFieldCount) {


                        $('input#dateField')[dateCount].value = answerfromdb[j];
                        dateCount++;
                    }
                }
                if (tabledata.rows[i].cells[j].children[0].name == 'NumberEnter') {
                    if (numericCount < numericFieldCount) {


                        $('input#numField')[numericCount].value = answerfromdb[j];
                        numericCount++;
                    }
                }


                else if (tabledata.rows[i].cells[j].children[0].className == "btn-group") {

                    if (Ddowncount < dropdownCount) {

                        $('#SimpleDropDownDiv  button')[Ddowncount].innerText = answerfromdb[j];
                        Ddowncount++;
                    }






                }

            }
        }
    }


</script>